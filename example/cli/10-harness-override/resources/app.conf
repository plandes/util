## example of a Zensols configuration CLI

[cli]
# the list of applications to invoke on start up
apps = list: ${cli_config_default:apps}, app
# declare sections to remove
cleanups = list: ${cli_config_default:cleanups}, app, app_decorator
# there are needed to print the configuration: package
# set the default actions
default_action = show

# set the default configuration file
[config_cli_decorator]
option_overrides = dict: {'config_path': {'default': '${default:root_dir}/etc/payroll.conf'}}

[import]
sections = list: imp_env
config_files = list:
    resource(zensols.util): resources/default.conf,
    resource(zensols.util): resources/cli.conf,
    resource(zensols.util): resources/cli-config.conf

[config_import]
# the test configuration file needs interpolates the following sections
references = list: app, package, env

[config_imp]
# source the config file for forward propogating option interpolation; then
# source the object factory sections, finally source the configuration file
# again for any section overwrites
config_files = list: 
    ^{config_path},
    ^{override},

    # if this was an installed application or if running only from this
    # directory we could use the following application based resource; however,
    # example ../../../app/extharness.py also uses this application externally
    # so we must define it relative to the application root
    #
    #resource(mycom.payroll): resources/obj.conf
    resource: ${appenv:root_dir}/resources/obj.conf

# import environment variable `GITUSER` and set its values in a section called
# `env`
[imp_env]
type = environment
section_name = env
includes = set: GITUSER

# the main application, which is given as the single second pass action in the
# `cli` section.
[app]
class_name = mycom.payroll.Tracker
db = instance: emp_db

# modifies the first pass list `list_actions_cli` action
[list_actions_cli_decorator]
class_name = zensols.cli.ActionCli
option_overrides = dict: {
    'list_output_format':
        {'long_name': 'list',
         'short_name': 'l'}}

# modifies the main app instance `app`
[app_decorator]
class_name = zensols.cli.ActionCli
option_excludes = set: db
mnemonic_excludes = set: stray_method
mnemonic_overrides = dict: {
    'print_employees': 'show',
    'report_salary': 'salary'}
