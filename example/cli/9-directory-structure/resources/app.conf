## example of a Zensols configuration CLI

# the section used by the framework to configure the command line
[cli]
class_name = zensols.cli.ActionCliManager
apps = list: pkg_cli, log_cli, config_cli, list_actions_cli, app, pkg_reporter
decorator_section_format = {section}_decorator
doc = A payroll program.
default_action = show

# configure a first pass action that configures logging
[log_cli]
class_name = zensols.cli.LogConfigurator
log_name = ${package:name}
format = %%(asctime)-15s %%(message)s
default_level = info

# add package information used by `log_cli` section's log name, which is
# `package:name`
[pkg_cli]
class_name = zensols.cli.PackageInfoImporter

# adds the `--config` command line option and sources the configuration file
[config_cli]
class_name = zensols.cli.ConfigurationImporter

# lists actions by mnemonic and their documentation
[list_actions_cli]
class_name = zensols.cli.ListActions

# indicate additional configurations to import, which in this case imports
# environment variables
[import]
sections = list: imp_env

# import environment variable `GITUSER` and set its values in a section called
# `env`
[imp_env]
type = environment
section_name = env
includes = set: GITUSER

# the employee "database", which is just a reference to a list of instances by
# section in the configuration given on the command line with `--config`
[emp_db]
class_name = mycom.payroll.EmployeeDatabase
departments = instance: list: human_resources

# the main application, which is given as the single second pass action in the
# `cli` section.
[app]
class_name = mycom.payroll.Tracker
db = instance: emp_db

# another second pass action containing class
[pkg_reporter]
class_name = mycom.payroll.PackageReporter

# modifies the first pass list `list_actions_cli` action
[list_actions_cli_decorator]
class_name = zensols.cli.ActionCli
option_overrides = dict: {
    'list_output_format':
        {'long_name': 'list',
         'short_name': 'l'}}

# modifies the main app instance `app`
[app_decorator]
class_name = zensols.cli.ActionCli
mnemonic_excludes = set: stray_method
option_excludes = set: db
mnemonic_overrides = dict: {
    'print_employees': 'show',
    'report_salary': 'salary'}
